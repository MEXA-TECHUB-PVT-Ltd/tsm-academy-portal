{"version":3,"file":"static/js/427.2a8ff3cf.chunk.js","mappings":"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","sources":["pages/courses/OrdersTable.js","components/cards/statistics/AnalyticEcommerce.js","pages/courses/SamplePage.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n// material-ui\nimport {\n  Box, Menu, MenuItem,\n  Skeleton,\n  TablePagination,\n  Tooltip, Grid, Avatar, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography\n} from '@mui/material';\n\n// project import\nimport emptyImage from \"../../assets/images/icons8-empty-64.png\"\nimport { BASE_URL, post } from 'Urls/api';\nimport {\n  EllipsisOutlined,\n} from '@ant-design/icons';\n\nimport { useNavigate } from 'react-router-dom';\n\nexport default function OrderTable() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  // Pagination \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [loader, setLoader] = useState(true)\n\n  // Use effect \n  const fetchAllproducts = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('@UserSession'));\n\n      const postData = {\n        user_id: user?.user?.user_id,\n      }\n      const apiData = await post('package/getUserEnrolledCourses', postData); // Specify the endpoint you want to call\n      console.log(\"ALL User Courses\")\n      console.log(apiData)\n\n      if (apiData.error) {\n        setLoader(false)\n      } else {\n        setProducts(apiData?.result)\n        setLoader(false)\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchAllproducts()\n  }, [page]);\n  return (\n    <Box>\n      {loader ? <>\n        <Grid container spacing={2} pt={10} >\n          {/* For variant=\"text\", adjust the height via font-size */}\n\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n\n        </Grid>\n      </> : <>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} align=\"right\">\n\n            <TableContainer\n              sx={{\n                width: '100%',\n                overflowX: 'auto',\n                position: 'relative',\n                display: 'block',\n                maxWidth: '100%',\n                '& td, & th': { whiteSpace: 'nowrap' }\n              }}\n            >\n              <Table\n                aria-labelledby=\"tableTitle\"\n                sx={{\n                  '& .MuiTableCell-root:first-of-type': {\n                    pl: 2\n                  },\n                  '& .MuiTableCell-root:last-of-type': {\n                    pr: 3\n                  }\n                }}\n              >\n                <TableHead>\n                  <TableRow>\n\n                    <TableCell align=\"left\">Course </TableCell>\n\n                    <TableCell align=\"center\">Description</TableCell>\n\n\n                    <TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.length === 0 ? <>\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box style={{\n                          display: 'flex',\n                          justifyContent: 'center'\n                        }}>\n                          <Avatar variant=\"square\" src={emptyImage} alt=\"No Data\" style={{ width: '64px', height: 'auto', marginBlock: '2%' }} />\n                        </Box>\n                      </TableCell>\n\n                    </TableRow>\n                  </> :\n                    <>\n                      {products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                        <>\n                          <TableRow\n                            key={row?.package?.package_id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                          >\n                           \n                            <TableCell component=\"th\" scope=\"row\" style={{ cursor: 'pointer' }} onClick={() => navigate(`/course_detail/${row?.package?.package_id}`)}>\n                              <Grid container spacing={2}>\n                                <Grid item xs={12} md={3}>\n                                  <Avatar variant=\"square\"\n                                    src={`${BASE_URL}${row?.package?.image}`}\n                                    style={{\n                                      backgroundColor: '#03356b',\n                                      textTransform: 'capitalize'\n                                    }} />\n\n\n                                </Grid>\n                                <Grid item xs={12} md={9}>\n                                  <Typography variant=\"h5\" style={{ fontWeight: 200 }}>{row?.package?.package_name}</Typography>\n                                  <Typography variant=\"h5\" style={{ color: 'gray' }} >{row?.package?.package_price} PKR</Typography>\n\n                                </Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Typography\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis',\n                                  maxWidth: '300px',\n                                  cursor: 'pointer'\n                                }}\n                                title={row?.package?.description.length > 40 ? row?.package?.description : null} // Set a title for the full name\n                              >\n                                {row?.package?.description}\n                              </Typography>\n\n                            </TableCell>\n\n                           \n\n                            <TableCell align=\"center\">\n                              <Tooltip title=\"Action\">\n                                <EllipsisOutlined ref={anchorRef} style={{ fontSize: '30px', cursor: 'pointer' }} onClick={\n                                  (event) => {\n                                    setSelectedIndex(row?.package?.package_id)\n                                    setAnchorEl(event.currentTarget);\n                                  }} />\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n\n\n                        </>\n                      ))}</>}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item xs={12} md={12} align=\"right\">\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={products.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n\n          </Grid>\n        </Grid>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              boxShadow: '0px 2px 30px -15px rgba(94,94,107,0.67)',\n              mt: 1.5,\n\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <MenuItem onClick={() => navigate(`/course_detail/${selectedIndex}`)}>View Course</MenuItem>\n          {/* <MenuItem onClick={() => navigate(`/course_detail/${selectedIndex}`)}>View Course</MenuItem> */}\n\n        </Menu>\n      </>}\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, Chip, Grid, Stack, Typography } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// assets\nimport { RiseOutlined, FallOutlined } from '@ant-design/icons';\n\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\n\nconst AnalyticEcommerce = ({ color, title, count, percentage, isLoss, extra }) => (\n  <MainCard contentSX={{ p: 2.25 }}>\n    <Stack spacing={0.5}>\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        {title}\n      </Typography>\n      <Grid container alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" color=\"inherit\">\n            {count}\n          </Typography>\n        </Grid>\n        {percentage && (\n          <Grid item>\n            <Chip\n              variant=\"combined\"\n              color={color}\n             \n              label={`${percentage}%`}\n              sx={{ ml: 1.25, pl: 1 }}\n              size=\"small\"\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Stack>\n    \n  </MainCard>\n);\n\nAnalyticEcommerce.propTypes = {\n  color: PropTypes.string,\n  title: PropTypes.string,\n  count: PropTypes.string,\n  percentage: PropTypes.number,\n  isLoss: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n};\n\nAnalyticEcommerce.defaultProps = {\n  color: 'primary'\n};\n\nexport default AnalyticEcommerce;\n","// material-ui\nimport {\n  Typography, Grid\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\n// project import\nimport OrdersTable from './OrdersTable';\nimport { post } from 'Urls/api';\nimport AnalyticEcommerce from 'components/cards/statistics/AnalyticEcommerce';\n\nconst Course = () => {\n  const [total_users, setTotal_Users] = useState(0)\n  const [total_subscriptions, setTotal_Subscriptions] = useState(0)\n  const fetchAllproducts = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('@UserSession'));\n\n      const postData = {\n        user_id: user?.user?.user_id,\n      }\n      const apiData = await post('package/getUserEnrolledCourses', postData); // Specify the endpoint you want to call\n      console.log(\"ALL User Count\")\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        setTotal_Users(1)\n        setTotal_Subscriptions(apiData?.result?.length)\n      }\n    } catch (error) {\n    }\n  }\n  useEffect(() => {\n    fetchAllproducts()\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h3\" style={{ fontWeight: 700 }}>Courses</Typography>\n\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={6} lg={6}>\n              <AnalyticEcommerce title=\"Enrolled Programs\" count={total_users} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={6} lg={6}>\n              <AnalyticEcommerce title=\"Enrolled Courses\" count={total_subscriptions} />\n            </Grid>\n\n\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} md={12}>\n          <OrdersTable />\n        </Grid>\n\n      </Grid>\n\n    </>\n  )\n};\n\nexport default Course;\n"],"names":["OrderTable","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","products","setProducts","anchorRef","useRef","_useState3","_useState4","anchorEl","setAnchorEl","open","Boolean","_useState5","_useState6","selectedIndex","setSelectedIndex","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","_useState12","loader","setLoader","fetchAllproducts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_user$user","user","postData","apiData","wrap","_context","prev","next","JSON","parse","localStorage","getItem","user_id","post","sent","console","log","error","result","t0","stop","apply","arguments","useEffect","_jsx","Box","children","_Fragment","_jsxs","Grid","container","spacing","pt","item","xs","md","Skeleton","variant","height","align","TableContainer","sx","width","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableHead","TableRow","TableCell","TableBody","length","colSpan","style","justifyContent","Avatar","src","alt","marginBlock","slice","map","row","_row$package","_row$package3","_row$package4","_row$package5","_row$package6","_row$package7","_row$package8","border","component","scope","cursor","onClick","_row$package2","concat","package","package_id","BASE_URL","image","backgroundColor","textTransform","Typography","fontWeight","package_name","color","package_price","overflow","textOverflow","title","description","Tooltip","EllipsisOutlined","ref","fontSize","event","_row$package9","currentTarget","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","Menu","id","onClose","MenuListProps","PaperProps","elevation","boxShadow","mt","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","AnalyticEcommerce","percentage","isLoss","extra","MainCard","contentSX","p","Stack","alignItems","Chip","label","ml","size","defaultProps","total_users","setTotal_Users","total_subscriptions","setTotal_Subscriptions","_apiData$result","sm","lg","OrdersTable"],"sourceRoot":""}